/* eslint-disable @typescript-eslint/ban-ts-comment */

import path from 'path'
import mdx from '@mdx-js/rollup'
import { babel } from '@rollup/plugin-babel'
import typescript from '@rollup/plugin-typescript'
import vue from '@vitejs/plugin-vue'
import vueJsx from '@vitejs/plugin-vue-jsx'
import { defineConfig } from 'vite'
import svgLoader from 'vite-svg-loader'

// https://vitejs.dev/config/
export default defineConfig({
  base: '/',

  plugins: [
    vue(),

    vueJsx({
      babelPlugins: [
        'babel-plugin-transform-typescript-metadata',
        ['@babel/plugin-proposal-decorators', { legacy: true }],
        ['@babel/plugin-proposal-class-properties', { loose: true }]
      ]
    }),

    // @ts-ignore
    mdx({
      jsx: true
    }),

    // This babel is for MDX.
    // It transforms the JSX which is generated by MDX Plugin into JS.
    // @ts-ignore
    babel({
      extensions: ['.md', '.mdx'],
      babelHelpers: 'bundled'
    }),

    svgLoader()
  ],

  css: {
    modules: {
      localsConvention: 'camelCaseOnly'
    },

    preprocessorOptions: {
      styl: {
        imports: [
          path.resolve(__dirname, './lib/style/index.styl')
        ]
      }
    }
  },

  server: {
    port: 8080,
    host: '0.0.0.0'
  },

  build: {
    assetsInlineLimit: 8192,
    lib: {
      entry: path.resolve(__dirname, './lib/index.tsx'),
      name: 'Lancet',
      fileName: (format) => `index.${format}.js`
    },
    rollupOptions: {
      external: [
        'vue'
      ],

      output: {
        globals: {
          vue: 'Vue'
        }
      },

      plugins: [
        typescript({
          rootDir: path.resolve(__dirname, './lib'),
          declaration: true,
          declarationDir: path.resolve(__dirname, './dist'),
          exclude: path.resolve(__dirname, './node_modules/**'),
          allowSyntheticDefaultImports: true
        }) as any
      ]
    }
  }
})
